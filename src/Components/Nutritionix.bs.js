// Generated by BUCKLESCRIPT VERSION 5.0.3, PLEASE EDIT WITH CARE

import * as Block from "../../node_modules/bs-platform/lib/es6/block.js";
import * as Curry from "../../node_modules/bs-platform/lib/es6/curry.js";
import * as Fetch from "../../node_modules/bs-fetch/src/Fetch.js";
import * as Repromise from "../../node_modules/@aantron/repromise/src/js/repromise.js";
import * as Caml_option from "../../node_modules/bs-platform/lib/es6/caml_option.js";
import * as Nutritionix_bs from "../Types/Nutritionix_bs.bs.js";
import * as Caml_js_exceptions from "../../node_modules/bs-platform/lib/es6/caml_js_exceptions.js";

var headers = /* array */[
  /* tuple */[
    "x-app-id",
    "83d876f1"
  ],
  /* tuple */[
    "x-app-key",
    "559669396947c4f06e5774f7888867d7"
  ],
  /* tuple */[
    "x-remote-user-id",
    "user"
  ],
  /* tuple */[
    "Content-Type",
    "application/json"
  ]
];

function fetchToResult(pr, convertValue, callback) {
  return Repromise.andThen((function (res) {
                return Repromise.resolved(Curry._1(callback, res));
              }), Repromise.Rejectable[/* catch */7]((function (error) {
                    return Repromise.resolved(/* Error */Block.variant("Error", 1, [error]));
                  }), Repromise.Rejectable[/* map */5](convertValue, Repromise.Rejectable[/* andThen */4](Repromise.Rejectable[/* fromJsPromise */10], Repromise.Rejectable[/* map */5]((function (value) {
                                return value.json();
                              }), Repromise.Rejectable[/* fromJsPromise */10](pr))))));
}

function fetchAutoComplete(query, callback) {
  var url = "https://trackapi.nutritionix.com/v2/search/instant?query=" + (query + "&self=false&branded=false&common=true&common_general=true&common_grocery=true&common_restaurant=true");
  return fetchToResult(fetch(url, Fetch.RequestInit[/* make */0](/* Get */0, Caml_option.some(headers), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* () */0)), (function (value) {
                try {
                  return /* Ok */Block.variant("Ok", 0, [Curry._1(Nutritionix_bs.read_autoCompleteMain, value)[/* common */0]]);
                }
                catch (raw_e){
                  var e = Caml_js_exceptions.internalToOCamlException(raw_e);
                  return /* Error */Block.variant("Error", 1, [e]);
                }
              }), callback);
}

function fetchNutrients(query, callback) {
  return fetchToResult(fetch("https://trackapi.nutritionix.com/v2/natural/nutrients", Fetch.RequestInit[/* make */0](/* Post */2, Caml_option.some(headers), Caml_option.some(JSON.stringify(Curry._1(Nutritionix_bs.write_nutrientsRequest, query))), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* () */0)), (function (value) {
                try {
                  return /* Ok */Block.variant("Ok", 0, [Curry._1(Nutritionix_bs.read_nutriendsResponse, value)[/* foods */0]]);
                }
                catch (raw_e){
                  var e = Caml_js_exceptions.internalToOCamlException(raw_e);
                  return /* Error */Block.variant("Error", 1, [e]);
                }
              }), callback);
}

export {
  headers ,
  fetchToResult ,
  fetchAutoComplete ,
  fetchNutrients ,
  
}
/* Repromise Not a pure module */
