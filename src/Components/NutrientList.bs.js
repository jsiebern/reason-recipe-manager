// Generated by BUCKLESCRIPT VERSION 5.0.3, PLEASE EDIT WITH CARE

import * as Block from "../../node_modules/bs-platform/lib/es6/block.js";
import * as Curry from "../../node_modules/bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Belt_List from "../../node_modules/bs-platform/lib/es6/belt_List.js";
import * as Belt_Array from "../../node_modules/bs-platform/lib/es6/belt_Array.js";
import * as Belt_Option from "../../node_modules/bs-platform/lib/es6/belt_Option.js";
import * as Nutritionix from "./Nutritionix.bs.js";

function NutrientList(Props) {
  var match = React.useState((function () {
          return "";
        }));
  var setValue = match[1];
  var value = match[0];
  var match$1 = React.useState((function () {
          return /* [] */0;
        }));
  var setNutrients = match$1[1];
  return React.createElement("div", undefined, React.createElement("input", {
                  type: "text",
                  value: value,
                  onKeyUp: (function (e) {
                      var match = e.keyCode;
                      if (match !== 13) {
                        return /* () */0;
                      } else {
                        Nutritionix.fetchNutrients(/* record */Block.record([
                                "lineDelimited",
                                "query",
                                "useBrandedFoods",
                                "useRawFoods"
                              ], [
                                undefined,
                                value,
                                false,
                                false
                              ]), (function (res) {
                                if (res.tag) {
                                  console.log(res[0]);
                                  return /* () */0;
                                } else {
                                  var match = res[0];
                                  if (match) {
                                    var nutrient = match[0];
                                    return Curry._1(setNutrients, (function (nutrients) {
                                                  return /* :: */Block.simpleVariant("::", [
                                                            nutrient,
                                                            nutrients
                                                          ]);
                                                }));
                                  } else {
                                    return /* () */0;
                                  }
                                }
                              }));
                        return /* () */0;
                      }
                    }),
                  onChange: (function (e) {
                      return Curry._1(setValue, e.target.value);
                    })
                }), React.createElement("br", undefined), React.createElement("table", undefined, React.createElement("tbody", undefined, Belt_Array.map(Belt_List.toArray(match$1[0]), (function (food) {
                            return React.createElement("tr", {
                                        key: String(food[/* ndb_no */2])
                                      }, React.createElement("td", undefined, String(food[/* ndb_no */2])), React.createElement("td", undefined, React.createElement("img", {
                                                alt: food[/* foodName */0],
                                                src: Belt_Option.getWithDefault(Belt_Option.map(food[/* photo */14], (function (p) {
                                                            return p[/* thumb */0];
                                                          })), "")
                                              })), React.createElement("td", undefined, food[/* foodName */0]), React.createElement("td", undefined, food[/* servingWeightGrams */17].toString() + "g"));
                          })))));
}

var make = NutrientList;

export {
  make ,
  
}
/* react Not a pure module */
