// Generated by BUCKLESCRIPT VERSION 5.0.3, PLEASE EDIT WITH CARE

import * as Block from "../../node_modules/bs-platform/lib/es6/block.js";
import * as Atdgen_codec_runtime from "../../node_modules/@ahrefs/bs-atdgen-codec-runtime/src/atdgen_codec_runtime.bs.js";

var partial_arg = Atdgen_codec_runtime.Encode[/* bool */6];

var partial_arg$1 = Atdgen_codec_runtime.Encode[/* option_as_constr */23];

function write__2(param) {
  return partial_arg$1(partial_arg, param);
}

var read__2 = Atdgen_codec_runtime.Decode[/* option_as_constr */25](Atdgen_codec_runtime.Decode[/* bool */3]);

var write_nutrientsRequest = Atdgen_codec_runtime.Encode[/* make */0]((function (t) {
        return Atdgen_codec_runtime.Encode[/* obj */14](/* :: */Block.simpleVariant("::", [
                      Atdgen_codec_runtime.Encode[/* field_o */13](undefined, Atdgen_codec_runtime.Encode[/* bool */6], "line_delimited", t[/* lineDelimited */0]),
                      /* :: */Block.simpleVariant("::", [
                          Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* string */3], "query", t[/* query */1]),
                          /* :: */Block.simpleVariant("::", [
                              Atdgen_codec_runtime.Encode[/* field_o */13](undefined, Atdgen_codec_runtime.Encode[/* bool */6], "use_branded_foods", t[/* useBrandedFoods */2]),
                              /* :: */Block.simpleVariant("::", [
                                  Atdgen_codec_runtime.Encode[/* field_o */13](undefined, Atdgen_codec_runtime.Encode[/* bool */6], "use_raw_foods", t[/* useRawFoods */3]),
                                  /* [] */0
                                ])
                            ])
                        ])
                    ]));
      }));

var read_nutrientsRequest = Atdgen_codec_runtime.Decode[/* make */0]((function (json) {
        var partial_arg = Atdgen_codec_runtime.Decode[/* string */7];
        var partial_arg$1 = Atdgen_codec_runtime.Decode[/* field */15];
        return /* record */Block.record([
                  "lineDelimited",
                  "query",
                  "useBrandedFoods",
                  "useRawFoods"
                ], [
                  Atdgen_codec_runtime.Decode[/* decode */1](Atdgen_codec_runtime.Decode[/* fieldOptional */17]("line_delimited", Atdgen_codec_runtime.Decode[/* bool */3]), json),
                  Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg$1("query", partial_arg, param);
                        }), json),
                  Atdgen_codec_runtime.Decode[/* decode */1](Atdgen_codec_runtime.Decode[/* fieldOptional */17]("use_branded_foods", Atdgen_codec_runtime.Decode[/* bool */3]), json),
                  Atdgen_codec_runtime.Decode[/* decode */1](Atdgen_codec_runtime.Decode[/* fieldOptional */17]("use_raw_foods", Atdgen_codec_runtime.Decode[/* bool */3]), json)
                ]);
      }));

var write_nutrientFoodMetadata = Atdgen_codec_runtime.Encode[/* make */0]((function (t) {
        return Atdgen_codec_runtime.Encode[/* obj */14](/* :: */Block.simpleVariant("::", [
                      Atdgen_codec_runtime.Encode[/* field */12](undefined, write__2, "is_raw_food", t[/* isRawFood */0]),
                      /* [] */0
                    ]));
      }));

var read_nutrientFoodMetadata = Atdgen_codec_runtime.Decode[/* make */0]((function (json) {
        var partial_arg = Atdgen_codec_runtime.Decode[/* field */15];
        return /* record */Block.record(["isRawFood"], [Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg("is_raw_food", read__2, param);
                        }), json)]);
      }));

var write_foodPhoto = Atdgen_codec_runtime.Encode[/* make */0]((function (t) {
        return Atdgen_codec_runtime.Encode[/* obj */14](/* :: */Block.simpleVariant("::", [
                      Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* string */3], "thumb", t[/* thumb */0]),
                      /* [] */0
                    ]));
      }));

var read_foodPhoto = Atdgen_codec_runtime.Decode[/* make */0]((function (json) {
        var partial_arg = Atdgen_codec_runtime.Decode[/* string */7];
        var partial_arg$1 = Atdgen_codec_runtime.Decode[/* field */15];
        return /* record */Block.record(["thumb"], [Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg$1("thumb", partial_arg, param);
                        }), json)]);
      }));

Atdgen_codec_runtime.Decode[/* option_as_constr */25](read_foodPhoto);

Atdgen_codec_runtime.Decode[/* option_as_constr */25](read_nutrientFoodMetadata);

var write_nutrientFood = Atdgen_codec_runtime.Encode[/* make */0]((function (t) {
        return Atdgen_codec_runtime.Encode[/* obj */14](/* :: */Block.simpleVariant("::", [
                      Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* string */3], "food_name", t[/* foodName */0]),
                      /* :: */Block.simpleVariant("::", [
                          Atdgen_codec_runtime.Encode[/* field_o */13](undefined, write_nutrientFoodMetadata, "metadata", t[/* metadata */1]),
                          /* :: */Block.simpleVariant("::", [
                              Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* int */5], "ndb_no", t[/* ndb_no */2]),
                              /* :: */Block.simpleVariant("::", [
                                  Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* float */4], "nf_calories", t[/* nf_calories */3]),
                                  /* :: */Block.simpleVariant("::", [
                                      Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* float */4], "nf_cholesterol", t[/* nf_cholesterol */4]),
                                      /* :: */Block.simpleVariant("::", [
                                          Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* float */4], "nf_dietary_fiber", t[/* nf_dietary_fiber */5]),
                                          /* :: */Block.simpleVariant("::", [
                                              Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* float */4], "nf_p", t[/* nf_p */6]),
                                              /* :: */Block.simpleVariant("::", [
                                                  Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* float */4], "nf_potassium", t[/* nf_potassium */7]),
                                                  /* :: */Block.simpleVariant("::", [
                                                      Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* float */4], "nf_protein", t[/* nf_protein */8]),
                                                      /* :: */Block.simpleVariant("::", [
                                                          Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* float */4], "nf_saturated_fat", t[/* nf_saturated_fat */9]),
                                                          /* :: */Block.simpleVariant("::", [
                                                              Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* float */4], "nf_sodium", t[/* nf_sodium */10]),
                                                              /* :: */Block.simpleVariant("::", [
                                                                  Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* float */4], "nf_sugars", t[/* nf_sugars */11]),
                                                                  /* :: */Block.simpleVariant("::", [
                                                                      Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* float */4], "nf_total_carbohydrate", t[/* nf_total_carbohydrate */12]),
                                                                      /* :: */Block.simpleVariant("::", [
                                                                          Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* float */4], "nf_total_fat", t[/* nf_total_fat */13]),
                                                                          /* :: */Block.simpleVariant("::", [
                                                                              Atdgen_codec_runtime.Encode[/* field_o */13](undefined, write_foodPhoto, "photo", t[/* photo */14]),
                                                                              /* :: */Block.simpleVariant("::", [
                                                                                  Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* int */5], "serving_qty", t[/* servingQty */15]),
                                                                                  /* :: */Block.simpleVariant("::", [
                                                                                      Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* string */3], "serving_unit", t[/* servingUnit */16]),
                                                                                      /* :: */Block.simpleVariant("::", [
                                                                                          Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* float */4], "serving_weight_grams", t[/* servingWeightGrams */17]),
                                                                                          /* [] */0
                                                                                        ])
                                                                                    ])
                                                                                ])
                                                                            ])
                                                                        ])
                                                                    ])
                                                                ])
                                                            ])
                                                        ])
                                                    ])
                                                ])
                                            ])
                                        ])
                                    ])
                                ])
                            ])
                        ])
                    ]));
      }));

var read_nutrientFood = Atdgen_codec_runtime.Decode[/* make */0]((function (json) {
        var partial_arg = Atdgen_codec_runtime.Decode[/* string */7];
        var partial_arg$1 = Atdgen_codec_runtime.Decode[/* field */15];
        var partial_arg$2 = Atdgen_codec_runtime.Decode[/* int */4];
        var partial_arg$3 = Atdgen_codec_runtime.Decode[/* field */15];
        var partial_arg$4 = Atdgen_codec_runtime.Decode[/* float */5];
        var partial_arg$5 = Atdgen_codec_runtime.Decode[/* field */15];
        var partial_arg$6 = Atdgen_codec_runtime.Decode[/* float */5];
        var partial_arg$7 = Atdgen_codec_runtime.Decode[/* field */15];
        var partial_arg$8 = Atdgen_codec_runtime.Decode[/* float */5];
        var partial_arg$9 = Atdgen_codec_runtime.Decode[/* field */15];
        var partial_arg$10 = Atdgen_codec_runtime.Decode[/* float */5];
        var partial_arg$11 = Atdgen_codec_runtime.Decode[/* field */15];
        var partial_arg$12 = Atdgen_codec_runtime.Decode[/* float */5];
        var partial_arg$13 = Atdgen_codec_runtime.Decode[/* field */15];
        var partial_arg$14 = Atdgen_codec_runtime.Decode[/* float */5];
        var partial_arg$15 = Atdgen_codec_runtime.Decode[/* field */15];
        var partial_arg$16 = Atdgen_codec_runtime.Decode[/* float */5];
        var partial_arg$17 = Atdgen_codec_runtime.Decode[/* field */15];
        var partial_arg$18 = Atdgen_codec_runtime.Decode[/* float */5];
        var partial_arg$19 = Atdgen_codec_runtime.Decode[/* field */15];
        var partial_arg$20 = Atdgen_codec_runtime.Decode[/* float */5];
        var partial_arg$21 = Atdgen_codec_runtime.Decode[/* field */15];
        var partial_arg$22 = Atdgen_codec_runtime.Decode[/* float */5];
        var partial_arg$23 = Atdgen_codec_runtime.Decode[/* field */15];
        var partial_arg$24 = Atdgen_codec_runtime.Decode[/* float */5];
        var partial_arg$25 = Atdgen_codec_runtime.Decode[/* field */15];
        var partial_arg$26 = Atdgen_codec_runtime.Decode[/* int */4];
        var partial_arg$27 = Atdgen_codec_runtime.Decode[/* field */15];
        var partial_arg$28 = Atdgen_codec_runtime.Decode[/* string */7];
        var partial_arg$29 = Atdgen_codec_runtime.Decode[/* field */15];
        var partial_arg$30 = Atdgen_codec_runtime.Decode[/* float */5];
        var partial_arg$31 = Atdgen_codec_runtime.Decode[/* field */15];
        return /* record */Block.record([
                  "foodName",
                  "metadata",
                  "ndb_no",
                  "nf_calories",
                  "nf_cholesterol",
                  "nf_dietary_fiber",
                  "nf_p",
                  "nf_potassium",
                  "nf_protein",
                  "nf_saturated_fat",
                  "nf_sodium",
                  "nf_sugars",
                  "nf_total_carbohydrate",
                  "nf_total_fat",
                  "photo",
                  "servingQty",
                  "servingUnit",
                  "servingWeightGrams"
                ], [
                  Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg$1("food_name", partial_arg, param);
                        }), json),
                  Atdgen_codec_runtime.Decode[/* decode */1](Atdgen_codec_runtime.Decode[/* fieldOptional */17]("metadata", read_nutrientFoodMetadata), json),
                  Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg$3("ndb_no", partial_arg$2, param);
                        }), json),
                  Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg$5("nf_calories", partial_arg$4, param);
                        }), json),
                  Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg$7("nf_cholesterol", partial_arg$6, param);
                        }), json),
                  Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg$9("nf_dietary_fiber", partial_arg$8, param);
                        }), json),
                  Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg$11("nf_p", partial_arg$10, param);
                        }), json),
                  Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg$13("nf_potassium", partial_arg$12, param);
                        }), json),
                  Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg$15("nf_protein", partial_arg$14, param);
                        }), json),
                  Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg$17("nf_saturated_fat", partial_arg$16, param);
                        }), json),
                  Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg$19("nf_sodium", partial_arg$18, param);
                        }), json),
                  Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg$21("nf_sugars", partial_arg$20, param);
                        }), json),
                  Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg$23("nf_total_carbohydrate", partial_arg$22, param);
                        }), json),
                  Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg$25("nf_total_fat", partial_arg$24, param);
                        }), json),
                  Atdgen_codec_runtime.Decode[/* decode */1](Atdgen_codec_runtime.Decode[/* fieldOptional */17]("photo", read_foodPhoto), json),
                  Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg$27("serving_qty", partial_arg$26, param);
                        }), json),
                  Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg$29("serving_unit", partial_arg$28, param);
                        }), json),
                  Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg$31("serving_weight_grams", partial_arg$30, param);
                        }), json)
                ]);
      }));

var partial_arg$2 = Atdgen_codec_runtime.Encode[/* list */8];

function write__3(param) {
  return partial_arg$2(write_nutrientFood, param);
}

var partial_arg$3 = Atdgen_codec_runtime.Decode[/* list */11];

function read__3(param) {
  return partial_arg$3(read_nutrientFood, param);
}

var write_nutriendsResponse = Atdgen_codec_runtime.Encode[/* make */0]((function (t) {
        return Atdgen_codec_runtime.Encode[/* obj */14](/* :: */Block.simpleVariant("::", [
                      Atdgen_codec_runtime.Encode[/* field */12](undefined, write__3, "foods", t[/* foods */0]),
                      /* [] */0
                    ]));
      }));

var read_nutriendsResponse = Atdgen_codec_runtime.Decode[/* make */0]((function (json) {
        var partial_arg = Atdgen_codec_runtime.Decode[/* field */15];
        return /* record */Block.record(["foods"], [Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg("foods", read__3, param);
                        }), json)]);
      }));

var write_autoCompleteFood = Atdgen_codec_runtime.Encode[/* make */0]((function (t) {
        return Atdgen_codec_runtime.Encode[/* obj */14](/* :: */Block.simpleVariant("::", [
                      Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* string */3], "food_name", t[/* foodName */0]),
                      /* :: */Block.simpleVariant("::", [
                          Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* string */3], "locale", t[/* locale */1]),
                          /* :: */Block.simpleVariant("::", [
                              Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* float */4], "serving_qty", t[/* servingQty */2]),
                              /* :: */Block.simpleVariant("::", [
                                  Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* string */3], "serving_unit", t[/* servingUnit */3]),
                                  /* :: */Block.simpleVariant("::", [
                                      Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* string */3], "tag_id", t[/* tagId */4]),
                                      /* :: */Block.simpleVariant("::", [
                                          Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* string */3], "tag_name", t[/* tagName */5]),
                                          /* :: */Block.simpleVariant("::", [
                                              Atdgen_codec_runtime.Encode[/* field */12](undefined, write_foodPhoto, "photo", t[/* photo */6]),
                                              /* [] */0
                                            ])
                                        ])
                                    ])
                                ])
                            ])
                        ])
                    ]));
      }));

var read_autoCompleteFood = Atdgen_codec_runtime.Decode[/* make */0]((function (json) {
        var partial_arg = Atdgen_codec_runtime.Decode[/* string */7];
        var partial_arg$1 = Atdgen_codec_runtime.Decode[/* field */15];
        var partial_arg$2 = Atdgen_codec_runtime.Decode[/* string */7];
        var partial_arg$3 = Atdgen_codec_runtime.Decode[/* field */15];
        var partial_arg$4 = Atdgen_codec_runtime.Decode[/* float */5];
        var partial_arg$5 = Atdgen_codec_runtime.Decode[/* field */15];
        var partial_arg$6 = Atdgen_codec_runtime.Decode[/* string */7];
        var partial_arg$7 = Atdgen_codec_runtime.Decode[/* field */15];
        var partial_arg$8 = Atdgen_codec_runtime.Decode[/* string */7];
        var partial_arg$9 = Atdgen_codec_runtime.Decode[/* field */15];
        var partial_arg$10 = Atdgen_codec_runtime.Decode[/* string */7];
        var partial_arg$11 = Atdgen_codec_runtime.Decode[/* field */15];
        var partial_arg$12 = Atdgen_codec_runtime.Decode[/* field */15];
        return /* record */Block.record([
                  "foodName",
                  "locale",
                  "servingQty",
                  "servingUnit",
                  "tagId",
                  "tagName",
                  "photo"
                ], [
                  Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg$1("food_name", partial_arg, param);
                        }), json),
                  Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg$3("locale", partial_arg$2, param);
                        }), json),
                  Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg$5("serving_qty", partial_arg$4, param);
                        }), json),
                  Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg$7("serving_unit", partial_arg$6, param);
                        }), json),
                  Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg$9("tag_id", partial_arg$8, param);
                        }), json),
                  Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg$11("tag_name", partial_arg$10, param);
                        }), json),
                  Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg$12("photo", read_foodPhoto, param);
                        }), json)
                ]);
      }));

var partial_arg$4 = Atdgen_codec_runtime.Encode[/* array */9];

function write__1(param) {
  return partial_arg$4(write_autoCompleteFood, param);
}

var partial_arg$5 = Atdgen_codec_runtime.Decode[/* array */12];

function read__1(param) {
  return partial_arg$5(read_autoCompleteFood, param);
}

var write_autoCompleteMain = Atdgen_codec_runtime.Encode[/* make */0]((function (t) {
        return Atdgen_codec_runtime.Encode[/* obj */14](/* :: */Block.simpleVariant("::", [
                      Atdgen_codec_runtime.Encode[/* field */12](undefined, write__1, "common", t[/* common */0]),
                      /* [] */0
                    ]));
      }));

var read_autoCompleteMain = Atdgen_codec_runtime.Decode[/* make */0]((function (json) {
        var partial_arg = Atdgen_codec_runtime.Decode[/* field */15];
        return /* record */Block.record(["common"], [Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                          return partial_arg("common", read__1, param);
                        }), json)]);
      }));

export {
  read_nutrientsRequest ,
  write_nutrientsRequest ,
  read_nutrientFoodMetadata ,
  write_nutrientFoodMetadata ,
  read_foodPhoto ,
  write_foodPhoto ,
  read_nutrientFood ,
  write_nutrientFood ,
  read_nutriendsResponse ,
  write_nutriendsResponse ,
  read_autoCompleteFood ,
  write_autoCompleteFood ,
  read_autoCompleteMain ,
  write_autoCompleteMain ,
  
}
/* read__2 Not a pure module */
